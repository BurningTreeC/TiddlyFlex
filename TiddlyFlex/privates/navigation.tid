title: $:/plugins/BTC/TiddlyFlex/privates/navigation

\procedure tiddlyflex-focus-flexcontainer() <$action-sendmessage $message="tm-focus-selector" $param=".tc-tiddlyflex-container" preventScroll="true"/>
\procedure tiddlyflex-keyboard-navigator(actions)
<$let currentColumn={{{ [subfilter<tdff.tiddlyflex-enlist-columns>] :intersection[{$:/columns!!current-column}] ~[subfilter<tdff.tiddlyflex-enlist-columns>first[]] }}} tv-story-list={{{ [[$:/StoryList-]addsuffix<currentColumn>!match[$:/StoryList-]] ~[[$:/StoryList-1]] }}} tv-history-list={{{ [[$:/HistoryList-]addsuffix<currentColumn>!match[$:/HistoryList-]] ~[[$:/HistoryList-1]] }}} currentTiddler={{{ [<tv-history-list>get[current-tiddler]] }}}>
	<$navigator story=<<tv-story-list>> history=<<tv-history-list>> openLinkFromInsideRiver={{$:/config/Navigation/openLinkFromInsideRiver}} openLinkFromOutsideRiver={{$:/config/Navigation/openLinkFromOutsideRiver}} relinkOnRename={{$:/config/RelinkOnRename}}>
		<<actions>>
	</$navigator>
</$let>
\end
\procedure tiddlyflex-simple-keyboard-navigator()
<$navigator story={{{ [subfilter<tdff.tiddlyflex-enlist-columns>] :intersection[{$:/columns!!current-column}] ~[subfilter<tdff.tiddlyflex-enlist-columns>first[]] :map[addprefix[$:/StoryList-]] }}} history={{{ [subfilter<tdff.tiddlyflex-enlist-columns>] :intersection[{$:/columns!!current-column}] ~[subfilter<tdff.tiddlyflex-enlist-columns>first[]] :map[addprefix[$:/HistoryList-]] }}} openLinkFromInsideRiver={{$:/config/Navigation/openLinkFromInsideRiver}} openLinkFromOutsideRiver={{$:/config/Navigation/openLinkFromOutsideRiver}} relinkOnRename={{$:/config/RelinkOnRename}}>
	<<actions>>
</$navigator>
\end
\procedure tiddlyflex-cycle-columns-navigator-inner()
<%if [<nextTiddler>is[draft]] %>
	<<tiddlyflex-focus-draft-tiddler>>
<% else %>
	<<tiddlyflex-focus-flexcontainer>>
<% endif %>
<$navigator story=<<tv-story-list>> history=<<tv-history-list>> openLinkFromInsideRiver={{$:/config/Navigation/openLinkFromInsideRiver}} openLinkFromOutsideRiver={{$:/config/Navigation/openLinkFromOutsideRiver}} relinkOnRename={{$:/config/RelinkOnRename}}>
	<$action-navigate $to=<<nextTiddler>>/>
</$navigator>
\end
\define tiddlyflex-cycle-columns-navigator()
<$action-setfield $tiddler="$:/columns" current-column=<<nextColumn>>/>
<$set name="currentHistoryListTiddler" value={{{ [<historyList>get[current-tiddler]] }}}>
	<%if [<tv-story-list>contains<currentHistoryListTiddler>] %>
		<%if [subfilter<tdff.tiddlyflex-story-river-filter>] +[match<currentHistoryListTiddler>] %>
			<$let nextTiddler=<<currentHistoryListTiddler>> cssEscapedTitle={{{ [<nextTiddler>escapecss[]] }}}>
				<<tiddlyflex-cycle-columns-navigator-inner>>
			</$let>
		<% else %>
			<$let nextTiddler={{{ [subfilter<tdff.tiddlyflex-story-river-filter>] +[nth[1]] }}} cssEscapedTitle={{{ [<nextTiddler>escapecss[]] }}}>
				<<tiddlyflex-cycle-columns-navigator-inner>>
			</$let>
		<% endif %>
	<% elseif [<tv-story-list>!contains<currentHistoryListTiddler>] %>
		<$let nextTiddler={{{ [subfilter<tdff.tiddlyflex-story-river-filter>] +[nth[1]] }}} cssEscapedTitle={{{ [<nextTiddler>escapecss[]] }}}>
			<<tiddlyflex-cycle-columns-navigator-inner>>
		</$let>
	<% endif %>
</$set>
\end
\procedure tiddlyflex-multi-column-keyboard-navigator()
<$let
	currentColumn={{{ [subfilter<tdff.tiddlyflex-enlist-columns>] :intersection[{$:/columns!!current-column}] ~[subfilter<tdff.tiddlyflex-enlist-columns>first[]] }}} 
	tv-story-list={{{ [[$:/StoryList-]addsuffix<currentColumn>!match[$:/StoryList-]] ~$:/StoryList-1 }}}
	tv-history-list={{{ [[$:/HistoryList-]addsuffix<currentColumn>!match[$:/HistoryList-]] ~$:/HistoryList-1 }}}
	focusedTiddler={{{ [<tv-history-list>get[current-tiddler]] }}}
	nextStoryCounter={{{ [subfilter<tdff.tiddlyflex-enlist-columns>after<currentColumn>] }}}
	nextStoryList={{{ [<tv-story-list>!match[$:/StoryList]removesuffix<currentColumn>addsuffix<nextStoryCounter>] ~[[$:/StoryList-2]] }}}
	nextHistoryList={{{ [<tv-history-list>!match[$:/HistoryList]removesuffix<currentColumn>addsuffix<nextStoryCounter>] ~[[$:/HistoryList-2]] }}}
	firstNextStoryTiddler={{{ [list<nextStoryList>first[]] }}}
	previousStoryCounter={{{ [subfilter<tdff.tiddlyflex-enlist-columns>before<currentColumn>] }}}
	previousStoryList={{{ [<tv-story-list>!match[$:/StoryList-]removesuffix<currentColumn>addsuffix<previousStoryCounter>] ~$:/StoryList-1 }}}
	previousHistoryList={{{ [<tv-history-list>!match[$:/HistoryList-]removesuffix<currentColumn>addsuffix<previousStoryCounter>] ~[[$:/HistoryList]] }}}
	firstPreviousStoryTiddler={{{ [list<previousStoryList>first[]] }}}
>
	<<actions>>
</$let>
\end