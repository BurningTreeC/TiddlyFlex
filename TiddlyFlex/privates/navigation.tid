title: $:/plugins/BTC/TiddlyFlex/privates/navigation

\procedure tiddlyflex-focus-flexcontainer() <$action-sendmessage $message="tm-focus-selector" $param=".tc-tiddlyflex-container" preventScroll="true"/>
\procedure tiddlyflex-keyboard-navigator(actions)
<$let currentColumn={{$:/columns!!current-column}} storyList={{{ [[$:/StoryList-]addsuffix<currentColumn>!match[$:/StoryList-]] ~[[$:/StoryList-1]] }}} historyList={{{ [[$:/HistoryList-]addsuffix<currentColumn>!match[$:/HistoryList-]] ~[[$:/HistoryList-1]] }}} currentTiddler={{{ [<historyList>get[current-tiddler]] }}}>
	<$navigator story=<<storyList>> history=<<historyList>> openLinkFromInsideRiver={{$:/config/Navigation/openLinkFromInsideRiver}} openLinkFromOutsideRiver={{$:/config/Navigation/openLinkFromOutsideRiver}} relinkOnRename={{$:/config/RelinkOnRename}}>
		<<actions>>
	</$navigator>
</$let>
\end
\procedure tiddlyflex-simple-keyboard-navigator()
<$navigator story={{{ [[$:/StoryList-]addsuffix{$:/columns!!current-column}!match[$:/StoryList-]] ~$:/StoryList-1 }}} history={{{ [[$:/HistoryList-]addsuffix{$:/columns!!current-column}!match[$:/HistoryList-]] ~$:/HistoryList-1 }}} openLinkFromInsideRiver={{$:/config/Navigation/openLinkFromInsideRiver}} openLinkFromOutsideRiver={{$:/config/Navigation/openLinkFromOutsideRiver}} relinkOnRename={{$:/config/RelinkOnRename}}>
	<<actions>>
</$navigator>
\end
\procedure tiddlyflex-cycle-columns-navigator-inner()
<%if [<nextTiddler>is[draft]] %>
	<<tiddlyflex-focus-draft-tiddler>>
<% else %>
	<<tiddlyflex-focus-flexcontainer>>
<% endif %>
<$navigator story=<<storyList>> history=<<historyList>> openLinkFromInsideRiver={{$:/config/Navigation/openLinkFromInsideRiver}} openLinkFromOutsideRiver={{$:/config/Navigation/openLinkFromOutsideRiver}} relinkOnRename={{$:/config/RelinkOnRename}}>
	<$action-navigate $to=<<nextTiddler>>/>
</$navigator>
\end
\procedure tiddlyflex-cycle-columns-navigator()
<$action-setfield $tiddler="$:/columns" current-column=<<nextColumn>>/>
<$set name="currentHistoryListTiddler" value={{{ [<historyList>get[current-tiddler]] }}}>
	<%if [<storyList>contains<currentHistoryListTiddler>] %>
		<$let nextTiddler={{{ [<historyList>get[current-tiddler]] }}} cssEscapedTitle={{{ [<nextTiddler>escapecss[]] }}}>
			<<tiddlyflex-cycle-columns-navigator-inner>>
		</$let>
	<% elseif [<storyList>!contains<currentHistoryListTiddler>] %>
		<$let nextTiddler={{{ [list<storyList>nth[1]] }}} cssEscapedTitle={{{ [<nextTiddler>escapecss[]] }}}>
			<<tiddlyflex-cycle-columns-navigator-inner>>
		</$set>
	<% endif %>
</$set>
\end
\procedure tiddlyflex-multi-column-keyboard-navigator()
<$let currentColumn={{$:/columns!!current-column}} 
	storyList={{{ [[$:/StoryList-]addsuffix<currentColumn>!match[$:/StoryList-]] ~$:/StoryList-1 }}}
	historyList={{{ [[$:/HistoryList-]addsuffix<currentColumn>!match[$:/HistoryList-]] ~$:/HistoryList-1 }}}
	focusedTiddler={{{ [<historyList>get[current-tiddler]] }}}
	nextStoryCounter={{{ [<currentColumn>add[1]] }}}
	nextStoryList={{{ [<storyList>!match[$:/StoryList]removesuffix<currentColumn>addsuffix<nextStoryCounter>] ~[[$:/StoryList-2]] }}}
	nextHistoryList={{{ [<historyList>!match[$:/HistoryList]removesuffix<currentColumn>addsuffix<nextStoryCounter>] ~[[$:/HistoryList-2]] }}}
	firstNextStoryTiddler={{{ [list<nextStoryList>first[]] }}}
	previousStoryCounter={{{ [<currentColumn>subtract[1]] }}}
	previousStoryList={{{ [<storyList>!match[$:/StoryList-]removesuffix<currentColumn>addsuffix<previousStoryCounter>] ~$:/StoryList-1 }}}
	previousHistoryList={{{ [<historyList>!match[$:/HistoryList-]removesuffix<currentColumn>addsuffix<previousStoryCounter>] ~[[$:/HistoryList]] }}}
	firstPreviousStoryTiddler={{{ [list<previousStoryList>first[]] }}}
>
	<<actions>>
</$let>
\end