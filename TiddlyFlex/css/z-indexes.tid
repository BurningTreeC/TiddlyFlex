title: $:/plugins/BTC/TiddlyFlex/styles/z-indexes
tags: $:/tags/Stylesheet

\define tiddlyflex-tiddler-z-indexes-inner()

<$list filter="[range<storyListCount>]">
`.tc-tiddlyflex-story-river-`$(column)$ `.tc-tiddlyflex-story-river-inner > .tc-tiddler-view-frame:nth-child(100n+`<$text text=<<currentTiddler>>/>`) > .tc-tiddler-frame`,
`.tc-tiddlyflex-story-river-`$(column)$ `.tc-tiddlyflex-story-river-inner > .tc-tiddler-edit-frame:nth-child(100n+`<$text text=<<currentTiddler>>/>`) > .tc-tiddler-frame {
z-index: `<$text text={{{ [<storyListCount>add[501]subtract<currentTiddler>] }}}/>`;
}
`
</$list>

\end

\define tiddlyflex-tiddler-z-indexes()

<$let storyListCount={{{ [list<storyList>] :filter[{$:/config/tiddlyflex/story-river/filter}match[yes]then<currentTiddler>search:$(searchFields)$:$(searchFlags)${$:/temp/search/input}else{$:/config/tiddlyflex/story-river/filter}!match[yes]then<currentTiddler>] +[count[]] }}}>

	<<tiddlyflex-tiddler-z-indexes-inner>>

</$let>

\end

<$list filter="[list[$:/columns]] ~1" variable="column">

	<$set name="storyList" value={{{ [[$:/StoryList-]addsuffix<column>] }}}>

		<$vars searchFields={{{ [[$:/config/tiddlyflex/story-river/filter/fields]get[text]!is[blank]!match[]] ~[[tags,text,title]] }}} searchFlags={{{ [[$:/config/tiddlyflex/story-river/filter/flags]get[text]!is[blank]!match[]] ~[[words]] }}}>

			<<tiddlyflex-tiddler-z-indexes>>

		</$vars>

	</$set>

</$list>