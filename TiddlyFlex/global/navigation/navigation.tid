title: $:/plugins/BTC/TiddlyFlex/globals/navigation
tags: $:/tags/Global

\define tiddlyflex-navigate-story-river-actions-selector()
.tc-tiddlyflex-story-river-$(column)$ [data-tiddler-title="$(navigateToCSSEscaped)$"]
\end
\function tiddlyflex-suppress-navigation() [<modifier>match[ctrl]then[true]] [<modifier>match[meta]then[true]] +[match[true]] +[limit[1]]
\function edit-missing-tiddler() [{$:/config/tiddlyflex/navigation/edit-missing-tiddlers}match[yes]then<event-navigateTo>!is[shadow]is[missing]]
\procedure tiddlyflex-navigate-story-river-actions-navigate()
<$action-sendmessage $message="tm-navigate" navigateTo=<<event-navigateTo>> navigateFromTitle=<<event-navigateFromTitle>> navigateSuppressNavigation={{{ [function[tiddlyflex-suppress-navigation]] }}}/>
\end
\procedure tiddlyflex-navigate-story-river-actions-inner-inner()
<$let storyList={{{ [[$:/StoryList-]addsuffix<column>] }}} historyList={{{ [[$:/HistoryList-]addsuffix<column>] }}}>
	<%if [[$:/columns]!contains<column>] %>
		<$action-listops $tiddler="$:/columns" $subfilter="[<column>]"/>
	<% endif %>
	<$navigator story=<<storyList>> history=<<historyList>> openLinkFromInsideRiver={{$:/config/Navigation/openLinkFromInsideRiver}} openLinkFromOutsideRiver={{$:/config/Navigation/openLinkFromOutsideRiver}} relinkOnRename={{$:/config/RelinkOnRename}}>
		<<tiddlyflex-navigate-story-river-actions-navigate>>
		<%if [function[edit-missing-tiddler]] %>
			<$action-sendmessage $message="tm-edit-tiddler" $param=<<event-navigateTo>> suppressNavigation={{{ [function[tiddlyflex-suppress-navigation]] }}}/>
		<% endif %>
	</$navigator>
</$let>
\end
\procedure tiddlyflex-navigate-story-river-actions-inner()
<%if [<modifier>match[shift]] %>
	<$set name="column" value={{{ [function[tiddlyflex-current-column]add[1]] }}}>
		<<tiddlyflex-navigate-story-river-actions-inner-inner>>
	</$set>
<% elseif [<modifier>match[alt]] %>
	<$set name="column" value={{{ [function[tiddlyflex-current-column]!match[1]subtract[1]] ~1 }}}>
		<<tiddlyflex-navigate-story-river-actions-inner-inner>>
	</$set>
<% endif %>
\end
\procedure tiddlyflex-navigate-story-river-actions()
\function tiddlyflex-no-shift-alt() [<modifier>!match[shift]then<modifier>!match[alt]]
<%if [list[$:/columns]] ~1 +[addprefix[$:/StoryList-]] +[enlist-input[]] +[contains<event-navigateTo>] %>
	<%if [function[tiddlyflex-no-shift-alt]] %>
		<$list filter="[list[$:/columns]] ~1" variable="column">
			<$let storyList={{{ [[$:/StoryList-]addsuffix<column>] }}} historyList={{{ [[$:/HistoryList-]addsuffix<column>] }}} navigateToCSSEscaped={{{ [<event-navigateTo>escapecss[]] }}}>
				<%if [<storyList>contains<event-navigateTo>] %>
					<%if [<modifier>!match[ctrl]then<modifier>!match[meta]] %>
						<$action-sendmessage $message="tm-scroll" selector=<<tiddlyflex-navigate-story-river-actions-selector>>/>
					<% endif %>
					<%if [function[edit-missing-tiddler]] %>
						<$navigator story=<<storyList>> history=<<historyList>> openLinkFromInsideRiver={{$:/config/Navigation/openLinkFromInsideRiver}} openLinkFromOutsideRiver={{$:/config/Navigation/openLinkFromOutsideRiver}} relinkOnRename={{$:/config/RelinkOnRename}}>
							<<tiddlyflex-navigate-story-river-actions-navigate>>
							<$action-sendmessage $message="tm-edit-tiddler" $param=<<event-navigateTo>> suppressNavigation={{{ [function[tiddlyflex-suppress-navigation]] }}}/>
						</$navigator>
					<% endif %>
				<% endif %>
			</$let>
		</$list>
	<% else %>
		<<tiddlyflex-navigate-story-river-actions-inner>>
	<% endif %>
<% else %>
	<%if [function[tiddlyflex-no-shift-alt]] %>
		<%if [function[edit-missing-tiddler]] %>
			<<tiddlyflex-navigate-story-river-actions-navigate>>
			<$action-sendmessage $message="tm-edit-tiddler" $param=<<event-navigateTo>> suppressNavigation={{{ [function[tiddlyflex-suppress-navigation]] }}}/>
		<% else %>
			<<tiddlyflex-navigate-story-river-actions-navigate>>
		<% endif %>
	<% else %>
		<<tiddlyflex-navigate-story-river-actions-inner>>
	<% endif %>
<% endif %>
\end
\procedure tiddlyflex-cancel-draft-tiddler-actions-draft-of-not-is-missing()
<$list filter="[list[$:/columns]!match<column>]" variable="column">
	<$set name="storyList" value={{{ [[$:/StoryList-]addsuffix<column>!match[$:/StoryList-]] ~$:/StoryList-1 }}}>
		<%if [<storyList>contains<currentTiddler>] %>
			<$set name="index" value={{{ [list<storyList>allbefore<currentTiddler>add[1]] }}}>
				<$let nextTiddler={{{ [list<storyList>zth<index>] }}} viewTiddler={{{ [<currentTiddler>get[draft.of]] }}}>
					<$action-listops $tiddler=<<storyList>> $subfilter="+[insertbefore<viewTiddler>,<nextTiddler>]"/>
					<$action-listops $tiddler=<<storyList>> $subfilter="-[<currentTiddler>]"/>
				</$let>
			</$set>
		<% endif %>
	</$set>
</$list>
<<delete-edittemplate-state-tiddlers>>
<$action-sendmessage $message="tm-cancel-tiddler"/>
\end
\procedure tiddlyflex-cancel-draft-tiddler-actions()
<%if [<currentTiddler>get[draft.of]!is[shadow]is[missing]] %>
	<$list filter="[list[$:/columns]!match<column>]" variable="column">
		<$set name="storyList" value={{{ [[$:/StoryList-]addsuffix<column>!match[$:/StoryList-]] ~$:/StoryList-1 }}}>
			<$list filter="[<storyList>contains<currentTiddler>]" variable="ignore">
				<$action-listops $tiddler=<<storyList>> $subfilter="-[<currentTiddler>]"/>
			</$list>
		</$set>
	</$list>
	<<delete-edittemplate-state-tiddlers>>
	<$let scrollTiddler={{{ [list<tv-story-list>after<currentTiddler>] ~[list<tv-story-list>before<currentTiddler>] }}}>
		<$action-setfield $tiddler=<<tv-history-list>> current-tiddler=<<scrollTiddler>>/>
		<$action-sendmessage $message="tm-cancel-tiddler"/>
	</$let>
<% else %>
	<<tiddlyflex-cancel-draft-tiddler-actions-draft-of-not-is-missing>>
<% endif %>
\end
\procedure tiddlyflex-delete-draft-tiddler-actions()
<$let deleteTiddlerViewMode={{{ [<currentTiddler>get[draft.of]] }}} deleteTiddlerEditMode=<<currentTiddler>>>
	<$list filter="[list[$:/columns]!match<column>]" variable="column">
		<$set name="storyList" value={{{ [[$:/StoryList-]addsuffix<column>!match[$:/StoryList-1]] ~[[$:/StoryList]] }}}>
			<%if [<storyList>contains<deleteTiddlerViewMode>] %>
				<$action-listops $tiddler=<<storyList>> $subfilter="-[<deleteTiddlerViewMode>]"/>
			<% elseif [<storyList>contains<deleteTiddlerEditMode>] %>
				<$action-listops $tiddler=<<storyList>> $subfilter="-[<deleteTiddlerEditMode>]"/>
			<% endif %>
		</$set>
	</$list>
</$let>
<<delete-edittemplate-state-tiddlers>>
<$let scrollTiddler={{{ [list<tv-story-list>after<currentTiddler>] ~[list<tv-story-list>before<currentTiddler>] }}}>
	<$action-setfield $tiddler=<<tv-history-list>> current-tiddler=<<scrollTiddler>>/>
	<$action-sendmessage $message="tm-delete-tiddler"/>
</$let>
\end