title: $:/plugins/BTC/TiddlyFlex/globals/navigation
tags: $:/tags/Global

\procedure tiddlyflex-navigate-story-river-actions-selector()
\rules only filteredtranscludeinline transcludeinline macrodef macrocallinline macrocallblock whitespace
.tc-tiddlyflex-story-river-{{{ [[$(tiddlyFlexColumn)$]substitute[]] }}} [data-tiddler-title={{{ [[$(navigateToCSSEscaped)$]substitute[]addprefix["]addsuffix["]] }}}]
\end
\function edit-missing-tiddler() [{$:/config/tiddlyflex/navigation/edit-missing-tiddlers}match[yes]then<event-navigateTo>!is[shadow]is[missing]]
\procedure tiddlyflex-navigate-story-river-actions-navigate()
<$set name="storyTiddler" value={{{ [<tv-history-list>get[current-tiddler]] :intersection[list<tv-story-list>] ~[[$:/HistoryList-]addsuffix[$:/columns!!current-column]get[current-tiddler]] }}}>
	<$action-sendmessage
		$message="tm-navigate"
		$navigateTo=<<event-navigateTo>>
		$navigateFromTitle={{{ [<storyTiddler>!is[blank]!match[]] ~[<event-navigateFromTitle>] }}}
		$navigateFromClientRect=<<event-navigateFromClientRect>>
		$navigateFromClientTop=<<event-navigateFromClientTop>>
		$navigateFromClientLeft=<<event-navigateFromClientLeft>>
		$navigateFromClientWidth=<<event-navigateFromClientWidth>>
		$navigateFromClientRight=<<event-navigateFromClientRight>>
		$navigateFromClientBottom=<<event-navigateFromClientBottom>>
		$navigateFromClientHeight=<<event-navigateFromClientHeight>>
		$navigateSuppressNavigation={{{ [<modifier>match[ctrl]then[true]] [<modifier>match[meta]then[true]] [<modifier>match[alt]then[true]] +[match[true]else[false]] }}}
		$names="[<list-event-paramObject>enlist-input[]]"
		$values="[<list-event-paramObject>enlist-input[]] :map:flat[addprefix[event-paramObject-]getvariable[]]"/>
</$set>
\end
\procedure tiddlyflex-navigate-story-river-actions-inner-inner()
<$let tv-story-list={{{ [[$:/StoryList-]addsuffix<tiddlyFlexColumn>] }}} tv-history-list={{{ [[$:/HistoryList-]addsuffix<tiddlyFlexColumn>] }}}>
	<%if [[$:/columns]!contains<tiddlyFlexColumn>] %>
		<$action-listops $tiddler="$:/columns" $subfilter="[<tiddlyFlexColumn>]"/>
	<% endif %>
	<$navigator story=<<tv-story-list>> history=<<tv-history-list>> openLinkFromInsideRiver={{$:/config/Navigation/openLinkFromInsideRiver}} openLinkFromOutsideRiver={{$:/config/Navigation/openLinkFromInsideRiver}} relinkOnRename={{$:/config/RelinkOnRename}}>
		<<tiddlyflex-navigate-story-river-actions-navigate>>
		<%if [function[edit-missing-tiddler]] %>
			<$action-sendmessage
				$message="tm-edit-tiddler"
				$param=<<event-navigateTo>>
				$tiddlerTitle=<<event-tiddlerTitle>>
				$names="[<list-event-paramObject>enlist-input[]]"
				$values="[<list-event-paramObject>enlist-input[]] :map:flat[addprefix[event-paramObject-]getvariable[]]"/>
		<% endif %>
	</$navigator>
</$let>
\end
\procedure tiddlyflex-navigate-story-river-actions-inner()
<%if [<modifier>match[shift]] %>
	<$let currentColumn=<<tiddlyFlexColumn>> tiddlyFlexColumn={{{ [<currentColumn>add[1]] }}}>
		<<tiddlyflex-navigate-story-river-actions-inner-inner>>
	</$let>
<% elseif [<modifier>match[alt-shift]] %>
	<$let currentColumn=<<tiddlyFlexColumn>> tiddlyFlexColumn={{{ [<tiddlyFlexColumn>!match[1]subtract[1]] ~1 }}}>
		<<tiddlyflex-navigate-story-river-actions-inner-inner>>
	</$let>
<% endif %>
\end
\procedure tiddlyflex-navigate-story-river-actions()
\function tiddlyflex-no-shift-alt() [<modifier>!match[shift]then<modifier>!match[alt-shift]]
<%if [subfilter<tdff.tiddlyflex-enlist-columns>] +[addprefix[$:/StoryList-]] +[enlist-input[]] +[contains<event-navigateTo>] %>
	<%if [function[tiddlyflex-no-shift-alt]] %>
		<$list filter="[subfilter<tdff.tiddlyflex-enlist-columns>]" variable="tiddlyFlexColumn">
			<$let tv-story-list={{{ [[$:/StoryList-]addsuffix<tiddlyFlexColumn>] }}} tv-history-list={{{ [[$:/HistoryList-]addsuffix<tiddlyFlexColumn>] }}} navigateToCSSEscaped={{{ [<event-navigateTo>escapecss[]] }}}>
				<%if [<tv-story-list>contains<event-navigateTo>] %>
					<%if [<modifier>!match[ctrl]then<modifier>!match[meta]then<modifier>!match[alt]] %>
						<$wikify name="scrollSelector" text=<<tiddlyflex-navigate-story-river-actions-selector>>>
							<$action-sendmessage $message="tm-scroll" selector=<<scrollSelector>>/>
						</$wikify>
					<% endif %>
					<%if [function[edit-missing-tiddler]] %>
						<$navigator story=<<tv-story-list>> history=<<tv-history-list>> openLinkFromInsideRiver={{$:/config/Navigation/openLinkFromInsideRiver}} openLinkFromOutsideRiver={{$:/config/Navigation/openLinkFromInsideRiver}} relinkOnRename={{$:/config/RelinkOnRename}}>
							<$set name="currentColumn" value=<<tiddlyFlexColumn>>>
								<<tiddlyflex-navigate-story-river-actions-navigate>>
							</$set>
							<$action-sendmessage
								$message="tm-edit-tiddler"
								$param=<<event-navigateTo>>
								$names="[<list-event-paramObject>enlist-input[]]"
								$values="[<list-event-paramObject>enlist-input[]] :map:flat[addprefix[event-paramObject-]getvariable[]]"/>
						</$navigator>
					<% endif %>
				<% endif %>
			</$let>
		</$list>
	<% else %>
		<<tiddlyflex-navigate-story-river-actions-inner>>
	<% endif %>
<% else %>
	<%if [function[tiddlyflex-no-shift-alt]] %>
		<%if [function[edit-missing-tiddler]] %>
			<$navigator story={{{ [<tiddlyFlexColumn>addprefix[$:/StoryList-]] }}} history={{{ [<tiddlyFlexColumn>addprefix[$:/HistoryList-]] }}} openLinkFromInsideRiver={{$:/config/Navigation/openLinkFromInsideRiver}} openLinkFromOutsideRiver={{$:/config/Navigation/openLinkFromInsideRiver}} relinkOnRename={{$:/config/RelinkOnRename}}>
				<$set name="currentColumn" value=<<tiddlyFlexColumn>>>
					<<tiddlyflex-navigate-story-river-actions-navigate>>
				</$set>
				<$action-sendmessage
					$message="tm-edit-tiddler"
					$param=<<event-navigateTo>>
					$names="[<list-event-paramObject>enlist-input[]]"
					$values="[<list-event-paramObject>enlist-input[]] :map:flat[addprefix[event-paramObject-]getvariable[]]"/>
			</$navigator>
		<% else %>
			<$navigator story={{{ [<tv-story-list>!is[blank]!match[]] ~[[$:/StoryList-]addsuffix<tiddlyFlexColumn>] }}} history={{{ [<tv-history-list>!is[blank]!match[]] ~[[$:/HistoryList-]addsuffix<tiddlyFlexColumn>] }}} openLinkFromInsideRiver={{$:/config/Navigation/openLinkFromInsideRiver}} openLinkFromOutsideRiver={{$:/config/Navigation/openLinkFromInsideRiver}} relinkOnRename={{$:/config/RelinkOnRename}}>
				<$set name="currentColumn" value=<<tiddlyFlexColumn>>>
					<<tiddlyflex-navigate-story-river-actions-navigate>>
				</$set>
			</$navigator>
		<% endif %>
	<% else %>
		<<tiddlyflex-navigate-story-river-actions-inner>>
	<% endif %>
<% endif %>
\end
\procedure tiddlyflex-cancel-draft-tiddler-actions-draft-of-not-is-missing()
<$list filter="[subfilter<tdff.tiddlyflex-enlist-columns>!match<tiddlyFlexColumn>]" variable="tiddlyFlexColumn">
	<$set name="tv-story-list" value={{{ [[$:/StoryList-]addsuffix<tiddlyFlexColumn>!match[$:/StoryList-]] ~$:/StoryList-1 }}}>
		<%if [<tv-story-list>contains<currentTiddler>] %>
			<$set name="index" value={{{ [subfilter<tdff.tiddlyflex-story-river-filter>] +[allbefore<currentTiddler>add[1]] }}}>
				<$let nextTiddler={{{ [<tdff.tiddlyflex-story-river-filter>] +[zth<index>] }}} viewTiddler={{{ [<currentTiddler>get[draft.of]] }}}>
					<$action-listops $tiddler=<<tv-story-list>> $subfilter="+[insertbefore<viewTiddler>,<nextTiddler>]"/>
					<$action-listops $tiddler=<<tv-story-list>> $subfilter="-[<currentTiddler>]"/>
				</$let>
			</$set>
		<% endif %>
	</$set>
</$list>
<<delete-edittemplate-state-tiddlers>>
<%if [[$:/state/tiddlyflex/story-river/fullscreen/]addsuffix<currentTiddler>!is[missing]] %>
	<$action-sendmessage $message="tm-rename-tiddler" from={{{ [[$:/state/tiddlyflex/story-river/fullscreen/]addsuffix<currentTiddler>] }}} to={{{ [<currentTiddler>get[draft.of]addprefix[$:/state/tiddlyflex/story-river/fullscreen/]] }}}/>
<% endif %>
<$navigator story={{{ [<tiddlyFlexColumn>addprefix[$:/StoryList-]] }}} history={{{ [<tiddlyFlexColumn>addprefix[$:/HistoryList-]] }}} openLinkFromInsideRiver={{$:/config/Navigation/openLinkFromInsideRiver}} openLinkFromOutsideRiver={{$:/config/Navigation/openLinkFromInsideRiver}} relinkOnRename={{$:/config/RelinkOnRename}}>
	<$action-sendmessage
		$message="tm-cancel-tiddler"
		$param={{{ [<event-param>!is[blank]!match[]] ~[<event-tiddlerTitle>] }}}
		$names="[<list-event-paramObject>enlist-input[]]"
		$values="[<list-event-paramObject>enlist-input[]] :map:flat[addprefix[event-paramObject-]getvariable[]]"/>
</$navigator>
\end
\procedure tiddlyflex-cancel-draft-tiddler-actions()
<%if [<currentTiddler>get[draft.of]!is[shadow]is[missing]] %>
	<$list filter="[subfilter<tdff.tiddlyflex-enlist-columns>!match<tiddlyFlexColumn>]" variable="tiddlyFlexColumn">
		<$set name="tv-story-list" value={{{ [[$:/StoryList-]addsuffix<tiddlyFlexColumn>!match[$:/StoryList-]] ~$:/StoryList-1 }}}>
			<$list filter="[<tv-story-list>contains<currentTiddler>]" variable="ignore">
				<$action-listops $tiddler=<<tv-story-list>> $subfilter="-[<currentTiddler>]"/>
			</$list>
		</$set>
	</$list>
	<<delete-edittemplate-state-tiddlers>>
	<$action-deletetiddler $tiddler={{{ [[$:/state/tiddlyflex/story-river/fullscreen/]addsuffix<currentTiddler>] }}}/>
	<$let scrollTiddler={{{ [<tdff.tiddlyflex-story-river-filter>] +[after<currentTiddler>] ~[<tdff.tiddlyflex-story-river-filter>before<currentTiddler>] }}}>
		<$action-setfield $tiddler=<<tv-history-list>> current-tiddler=<<scrollTiddler>>/>
		<$action-sendmessage
			$message="tm-cancel-tiddler"
			$param={{{ [<event-param>!is[blank]!match[]] ~[<event-tiddlerTitle>] }}}
			$names="[<list-event-paramObject>enlist-input[]]"
			$values="[<list-event-paramObject>enlist-input[]] :map:flat[addprefix[event-paramObject-]getvariable[]]"/>
	</$let>
<% else %>
	<<tiddlyflex-cancel-draft-tiddler-actions-draft-of-not-is-missing>>
<% endif %>
\end
\procedure tiddlyflex-delete-draft-tiddler-actions()
<$let deleteTiddlerViewMode={{{ [<currentTiddler>get[draft.of]] }}} deleteTiddlerEditMode=<<currentTiddler>>>
	<$list filter="[subfilter<tdff.tiddlyflex-enlist-columns>!match<tiddlyFlexColumn>]" variable="tiddlyFlexColumn">
		<$set name="tv-story-list" value={{{ [[$:/StoryList-]addsuffix<tiddlyFlexColumn>!match[$:/StoryList-1]] ~[[$:/StoryList]] }}}>
			<%if [<tv-story-list>contains<deleteTiddlerViewMode>] %>
				<$action-listops $tiddler=<<tv-story-list>> $subfilter="-[<deleteTiddlerViewMode>]"/>
			<% elseif [<tv-story-list>contains<deleteTiddlerEditMode>] %>
				<$action-listops $tiddler=<<tv-story-list>> $subfilter="-[<deleteTiddlerEditMode>]"/>
			<% endif %>
		</$set>
	</$list>
</$let>
<<delete-edittemplate-state-tiddlers>>
<$action-deletetiddler $tiddler={{{ [[$:/state/tiddlyflex/story-river/fullscreen/]addsuffix<currentTiddler>] }}}/>
<$action-deletetiddler $tiddler=<<qualifiedSearchPanelState>>/>
<$let scrollTiddler={{{ [<tdff.tiddlyflex-story-river-filter>] +[after<currentTiddler>] ~[<tdff.tiddlyflex-story-river-filter>before<currentTiddler>] }}}>
	<$action-setfield $tiddler=<<tv-history-list>> current-tiddler=<<scrollTiddler>>/>
	<$action-sendmessage
		$message="tm-delete-tiddler"
		$param={{{ [<event-param>!is[blank]!match[]] ~[<event-tiddlerTitle>] }}}
		$names="[<list-event-paramObject>enlist-input[]]"
		$values="[<list-event-paramObject>enlist-input[]] :map:flat[addprefix[event-paramObject-]getvariable[]]"/>
</$let>
\end